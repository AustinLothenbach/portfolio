{"version":3,"sources":["imgs/tictactoe.jpg","imgs/todo.jpg","imgs/truck.jpg","imgs/youtube.jpg","imgs/festival.jpg","imgs/server.jpg","App.js","serviceWorker.js","index.js"],"names":["module","exports","App","id","className","Container","Grid","container","spacing","direction","justify","alignItems","item","sm","Card","CardActionArea","href","target","CardMedia","component","image","require","height","CardContent","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.03772ff6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/tictactoe.4d975c18.jpg\";","module.exports = __webpack_public_path__ + \"static/media/todo.3676de5c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/truck.d2fa85a5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/youtube.913a3abe.jpg\";","module.exports = __webpack_public_path__ + \"static/media/festival.3847fd77.jpg\";","module.exports = __webpack_public_path__ + \"static/media/server.429dbb08.jpg\";","import React from 'react';\nimport './App.css';\nimport {Grid, Container, Card, CardContent, CardActionArea, CardMedia} from '@material-ui/core';\n\n\nfunction App() {\n\n  return (\n    <div>\n      <head id=\"homesplash\">\n        <header className=\"header\">\n        <h1 id=\"headerh1\">Hi, I'm Austin Lothenbach.</h1>\n        <h3 id=\"headertext\">Web Programming student and life-long techie.<br />I have experience with React (this whole website is built with React/Material-UI!), .NET, vanilla JavaScript, C#, Java, and more.<br />\n        Feel free to check out my work below! \n        </h3>\n        </header>\n      </head>\n      <body>\n      <div className=\"ReactApps\">\n      <h2 id=\"ReactAppsHeader\">React Apps</h2>\n      <Container>\n      <Grid container spacing={5} direction=\"row\" justify=\"center\" alignItems=\"baseline\" id=\"reactgrid\">\n        <Grid item sm>\n        <Card id=\"ttt\">\n            <CardActionArea href=\"https://austinlothenbach.github.io/tictactoe/\" target=\"_blank\">\n            <CardMedia component=\"img\" image={require('./imgs/tictactoe.jpg')} height=\"300\"/>\n            <CardContent>\n              <h2>Tic Tac Toe Game</h2>\n              <p>Play with two people!</p>\n            </CardContent>\n            </CardActionArea>\n          </Card>\n        </Grid>\n        <Grid item sm>\n        <Card id=\"notes\">\n            <CardActionArea href=\"https://austinlothenbach.github.io/NoteTakingApp/\" target=\"_blank\">\n            <CardMedia component=\"img\" image={require('./imgs/todo.jpg')} height=\"300\"/>\n            <CardContent>\n              <h2>To-Do React App</h2>\n              <p>Check off your to-do list!</p>\n            </CardContent>\n            </CardActionArea>\n          </Card>\n        </Grid>\n        <Grid item sm>\n          <Card id=\"barnes\">\n            <CardActionArea href=\"https://austinlothenbach.github.io/BarnesTrucking/\" target=\"_blank\">\n            <CardMedia component=\"img\" image={require('./imgs/truck.jpg')} height=\"300\"/>\n            <CardContent>\n              <h2>Small Business Website</h2>\n              <p>Fun with React Router</p>\n            </CardContent>\n            </CardActionArea>\n          </Card>\n        </Grid>\n      </Grid>\n      </Container>\n      </div>\n        <div className=\"OtherApps\">\n        <h2 id=\"otherappsheader\">Other Web Development Projects</h2>\n        <Container>\n          <Grid container spacing={5} direction=\"row\" justify=\"center\" alignItems=\"baseline\" id=\"reactgrid\">\n            <Grid item sm>\n            <Card id=\"ttt\">\n            <CardActionArea href=\"http://sotd.us/austinlothenbach/Youtube/index.html\" target=\"_blank\">\n            <CardMedia component=\"img\" image={require('./imgs/youtube.jpg')} height=\"300\" />\n            <CardContent>\n              <h2>YouTube Video Finder</h2>\n              <p>Search videos, choose how many you want!</p>\n            </CardContent>\n            </CardActionArea>\n          </Card>\n          </Grid>\n        <Grid item sm>\n        <Card id=\"legrand\">\n            <CardActionArea href=\"https://web.archive.org/web/20190806200236/http://legrandfest.com/\" target=\"_blank\">\n            <CardMedia component=\"img\" image={require('./imgs/festival.jpg')} height=\"300\" />\n            <CardContent>\n              <h2>Hometown Music Festival</h2>\n              <p>My first web project 2 years ago!</p>\n            </CardContent>\n            </CardActionArea>\n          </Card>\n        </Grid>\n        <Grid item sm>\n          <Card id=\"example\">\n            <CardActionArea href=\"http://austinlothenbach.azurewebsites.net/DataPage\" target=\"_blank\">\n            <CardMedia component=\"img\" image={require('./imgs/server.jpg')} height=\"300\"/>\n            <CardContent>\n              <h2>ASP.Net + SQL</h2>\n              <p>Add your info to a table (or delete info)!</p>\n            </CardContent>\n            </CardActionArea>\n          </Card>\n        </Grid>\n      </Grid>\n      </Container>\n      </div>\n      </body>\n      <footer>\n        Austin Lothenbach - &copy;2020\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}